name: Node.js CI/CD Pipeline

# Trigger the workflow on push or pull request events. on Trigger: The pipeline runs when a commit is pushed to the main branch or a pull request is created targeting the main branch.
on:
  push:
    branches:
      - main # Trigger on push to the 'main' branch
  pull_request:
    branches:
      - main # Trigger on pull request to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest version of Ubuntu for the runner

    steps:
      # Step 1: Checkout code from the GitHub repository using actions/checkout.
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment using actions/setup-node.
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16" # Specify the Node.js version

      # Step 3: Install dependencies (from package.json). Runs npm install to install the project dependencies.
      - name: Install dependencies
        run: npm install

      # Step 4: Run linting (using ESLint) to check for code quality issues.
      - name: Run ESLint
        run: npx eslint .

      # Step 5: Run tests (using Jest or Mocha) (e.g., with npm test).
      - name: Run tests
        run: npm test

      # Step 6: Build the app (optional step)
      - name: Build the app
        run: npm run build # Only needed if you have a build step (e.g., React app)

  deploy:
    runs-on: ubuntu-latest
    needs: build # This step depends on the success of the "build" job
    if: github.ref == 'refs/heads/main' # Deploy only from the 'main' branch

    steps:
      # Step 1: Checkout the code again (optional but best practice)
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js (same version as in the build)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Step 3: Install dependencies (again, in case any additional dependencies are needed during deploy)
      - name: Install dependencies
        run: npm install

      # Step 4: Deploy the app (example using Heroku CLI)
      - name: Deploy to Heroku
        run: |
          git remote add heroku https://git.heroku.com/your-app-name.git
          git push heroku main
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
